{"version":3,"sources":["components/search.js","components/result.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","textHandler","event","setState","text","target","value","handleKeyPress","key","btn","state","className","onKeyPress","this","onChange","placeholder","type","onClick","Component","Result","temp","parseFloat","data","main","toFixed","$","css","desc","weather","img","name","sys","country","src","alt","App","searchBtn","input","fetch","toLowerCase","then","response","json","cData","first","console","log","catch","err","error","message","fadeOut","fadeIn","cod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0fa89fe.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: \"\"\r\n        }\r\n    }\r\n\r\n    textHandler = (event) => {\r\n        this.setState({\r\n            text: event.target.value\r\n        })\r\n    }\r\n    handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n             this.props.btn(this.state.text)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"searchLoc\">\r\n                <div className=\"search-box\">\r\n                    <input onKeyPress={this.handleKeyPress} value={this.state.text} onChange={this.textHandler} placeholder=\"Current Location\" type=\"text\" />\r\n                    <button onClick={() => this.props.btn(this.state.text)} ><i className=\"fas fa-search\" /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import $ from \"jquery\";\r\n\r\nconst Result = (props) => {\r\n    let temp = parseFloat(props.data.main.temp - 273.15).toFixed(2);\r\n\r\n    if(temp > 25) {\r\n        $(\".contain\").css({\"background-color\": \"rgb(255, 94, 0)\"})\r\n    }\r\n    else\r\n        if(temp > 15) {\r\n            $(\".contain\").css({\"background-color\": \"rgb(201, 201, 0)\"})\r\n        }\r\n        else\r\n            if(temp > 5) {\r\n                $(\".contain\").css({\"background-color\": \"rgb(0, 128, 49)\"})\r\n            }\r\n            else\r\n                $(\".contain\").css({\"background-color\": \"rgb(0, 132, 255)\"})\r\n    \r\n    let desc = props.data.weather[0].main;\r\n    let img = \"\";\r\n\r\n    if(desc === \"Rain\") {\r\n        img = \"images/weatherConditions/rain.png\"\r\n    }\r\n    else\r\n        if(desc === \"Clear\") {\r\n            img = \"images/weatherConditions/clear.png\"\r\n        }\r\n        else\r\n            if(desc === \"Drizzle\") {\r\n                img = \"images/weatherConditions/drizzle.png\"\r\n            }\r\n            else\r\n                if(desc === \"Snow\") {\r\n                    img = \"images/weatherConditions/snow.png\"\r\n                }\r\n                else\r\n                    if(desc === \"Thunderstorm\") {\r\n                        img = \"images/weatherConditions/thunderstorm.png\"\r\n                    }\r\n                    else\r\n                        if(desc === \"Clouds\") {\r\n                            img = \"images/weatherConditions/clouds.png\"\r\n                        }\r\n                        else\r\n                            img = \"images/weatherConditions/atmosphere.png\"\r\n\r\n    return(\r\n        <div className=\"result\">\r\n            <h1 className=\"location\">\r\n                {props.data.name + \", \" + props.data.sys.country}\r\n            </h1>\r\n            <div className=\"weather\">\r\n                <div className=\"desc\">{desc}</div>\r\n                <img src={img} alt=\"Weather description\" />\r\n                <div className=\"degree\">{temp}<span>Â°</span>C</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result","import React, {Component} from 'react'\nimport Search from './components/search'\nimport Result from './components/result'\nimport $ from \"jquery\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            text: \"\",\n            cData: {}\n        }\n    }\n\n    searchBtn = (input) => {\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${input.toLowerCase()}&APPID=18afdaa88da7616c414c4fe1c66cb408`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          cData: data,\n          text: input,\n          first: false\n        })\n        console.log(data)\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        })\n      });\n      $(\".result\").fadeOut(0)\n    }\n\n    // position = async () => {\n    //   await navigator.geolocation.getCurrentPosition(\n    //     position => this.setState({ \n    //       latitude: position.coords.latitude, \n    //       longitude: position.coords.longitude\n    //     }), \n    //     err => console.log(err)\n    //   );\n    // }\n\n    componentDidMount() {\n      this.searchBtn(\"Baltimore\")\n    }\n\n    componentDidUpdate() {\n      $(\".result\").fadeIn(300)\n    }\n\n    render() {\n\n        return(\n          <div className=\"inner\">\n            <Search btn={this.searchBtn}/>\n            {(this.state.cData.cod === 200) ? <Result data={this.state.cData}/> : <div className=\"error\">{this.state.cData.message}</div>}\n        </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}